{"version":3,"sources":["../src/index.js"],"names":["_","Glob","FSE","AEMClientLibGeneratorPlugin","constructor","_options","options","logger","getInstance","logLevel","templateEngine","templateSettings","apply","compiler","plugin","info","compilation","callback","Object","keys","assets","forEach","filename","verbose","context","cleanBuilds","cleanClientLibs","then","generateClientLibs","catch","handleError","createBlankClientLibFolders","createClientLibConfig","copyFilesToLibs","libs","baseDir","Promise","all","map","lib","dir","resolve","destination","name","remove","err","Error","ensureDir","templateFn","compile","xmlStr","dependencies","file","outputFile","copyAssetFilesToLib","clientLibPath","promises","kind","buildAssetPaths","asset","i","srcFile","src","destFolder","dest","destFile","basename","push","copyFile","indexOf","createAssetTextFile","sourceFiles","paths","sourceFile","flattenedPaths","flattenAssetPathPatterns","concat","pattern","sync","cwd","sep","clientlibFolder","text","sortBy","console","log","extname","endsWith","relativePath","relative","lastIndexOf","dirname","join"],"mappings":"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","file":"index.js","sourcesContent":["import * as _ from 'lodash';\n\nimport Path from 'path';\nimport * as Glob from 'glob';\nimport * as FSE from 'fs-extra';\nimport {LoggerFactory} from './logger';\nimport ClientlibTemplateEngine from './clientlib-template-engine';\n\nexport default class AEMClientLibGeneratorPlugin {\n  constructor(_options) {\n    // Configure your plugin with options...\n    this.options = _options;\n    this.logger = LoggerFactory.getInstance(_options.logLevel);\n    // TODO: allow use of this.options.templatePath\n    this.templateEngine = new ClientlibTemplateEngine(false, this.options.templateSettings);\n  }\n\n  apply(compiler) {\n    \n    compiler.plugin('compile', (/*params*/) => {\n      this.logger.info('\\nThe compiler is starting to compile...\\n');\n    });\n\n    compiler.plugin('compilation', (compilation) => {\n      this.logger.info('\\nThe compiler is starting a new compilation...\\n');\n\n      compilation.plugin('optimize', () => {\n        this.logger.info('\\nThe compilation is starting to optimize files...\\n');\n      });\n    });\n\n    compiler.plugin('emit', (compilation, callback) => {\n      // Create a header string for the generated file:\n      this.logger.info('\\nThe compilation is starting to emit files...\\n');\n\n      Object.keys(compilation.assets).forEach((filename) => {\n        this.logger.verbose(filename);\n      });\n\n      this.logger.verbose(`now going to create directory under base: ${this.options.context}`);\n      \n      if (this.options.cleanBuilds) {\n        return this.cleanClientLibs().then(() => this.generateClientLibs(callback)).catch(() => this.handleError());\n      } else {\n        return this.generateClientLibs(callback).catch(() => this.handleError());\n      }\n      \n      \n    });\n  }\n\n  generateClientLibs(callback) {\n    return this.createBlankClientLibFolders()\n      .then(() => this.createClientLibConfig())\n      .then(() => this.copyFilesToLibs())\n      .then(() => {callback()})\n      .catch(() => this.handleError());\n  }\n\n  cleanClientLibs(libs = this.options.libs, baseDir = this.options.context) {\n    return Promise.all(_.map(libs, (lib) => {\n      const dir = Path.resolve(baseDir, lib.destination, lib.name);\n      return FSE.remove(dir).catch(() => this.handleError());\n    })).catch(() => this.handleError());\n  }\n\n  handleError(err) {\n    throw new Error(err);\n  }\n\n  createBlankClientLibFolders(libs = this.options.libs, baseDir = this.options.context) {\n    return Promise.all(_.map(libs, (lib) => {\n      const dir = Path.resolve(baseDir, lib.destination, lib.name);\n      this.logger.verbose(`Creating directory: ${dir}`);\n      return FSE.ensureDir(dir).catch(() => this.handleError());\n    }));\n  }\n\n  createClientLibConfig(libs = this.options.libs, baseDir = this.options.context) {\n    const templateFn = this.templateEngine.compile();\n    return Promise.all(_.map(libs, (lib) => {\n      const xmlStr = templateFn({\n        name: lib.name,\n        dependencies: lib.dependencies ? lib.dependencies : '',\n      });\n      const file = Path.resolve(baseDir, lib.destination, lib.name, '.content.xml');\n      this.logger.verbose(`Creating directory: ${file}`);\n      return FSE.outputFile(file, xmlStr).catch(() => this.handleError());\n    })).catch(() => this.handleError());\n  }\n\n  copyFilesToLibs(libs = this.options.libs, baseDir = this.options.context) {\n    return Promise.all(_.map(libs, lib => this.copyAssetFilesToLib(lib, baseDir))).catch(() => this.handleError());\n  }\n\n  copyAssetFilesToLib(lib, baseDir = this.options.context) {\n    const clientLibPath = Path.resolve(baseDir, lib.destination, lib.name);\n    const promises = [];\n    Object.keys(lib.assets).forEach((kind) => {\n      const assets = this.buildAssetPaths(lib.assets[kind], kind, baseDir);\n      assets.forEach((asset, i) => {\n        const srcFile = Path.resolve(baseDir, assets[i].src);\n        const destFolder = Path.resolve(clientLibPath, assets[i].dest);\n        const destFile = Path.resolve(clientLibPath, assets[i].dest, Path.basename(srcFile));\n        asset.destFile = destFile;\n        this.logger.verbose(`Copying asset: ${srcFile} to ${destFile}`);\n        promises.push(FSE.ensureDir(destFolder).then(() => FSE.copyFile(srcFile, destFile).catch(() => this.handleError())));\n      });\n      if (['js','css'].indexOf(kind) > -1) {\n        this.createAssetTextFile(assets, kind, clientLibPath);\n      }\n    });\n    return Promise.all(promises).catch(() => this.handleError());\n  }\n\n  buildAssetPaths(sourceFiles, kind, baseDir) {\n    let paths = [];\n    sourceFiles.forEach((sourceFile, i) => {\n      const flattenedPaths = this.flattenAssetPathPatterns(sourceFiles[i], kind, baseDir);\n      this.logger.verbose(`flattened paths:${flattenedPaths}`);\n      paths = paths.concat(flattenedPaths);\n    });\n    return paths;\n  }\n\n  flattenAssetPathPatterns(pattern, kind, baseDir) {\n    return _.map(Glob.sync(pattern.src ? pattern.src : pattern, { cwd: baseDir }), src => ({ src, dest: (typeof pattern === 'object' && pattern.dest) ? kind + Path.sep + pattern.dest : kind }));\n  }\n\n  createAssetTextFile(assets, kind, clientlibFolder) {\n    var text = [`#base=${kind}`];\n    assets = _.sortBy(assets, ['destFile']);\n    assets.forEach((asset) => {\n      console.log('ext:' + Path.extname(asset.destFile));\n      if (!Path.extname(asset.destFile).endsWith(kind)) {\n        return;\n      }\n      var relativePath = Path.relative(Path.resolve(clientlibFolder, kind), asset.destFile);\n      if (Path.basename(relativePath) === relativePath) {\n        text.push(relativePath);\n      } else if (text.lastIndexOf(`#base=${Path.dirname(relativePath)}`) === -1) {\n        text.push(`#base=${Path.dirname(relativePath)}`);\n        text.push(Path.basename(relativePath));\n      } else {\n        text.push(Path.basename(relativePath));\n      }\n    });\n    var destFile = Path.resolve(clientlibFolder, kind + '.txt');\n    return FSE.outputFile(destFile, text.join('\\n')).catch(() => this.handleError());\n  }\n}\n"]}